# See https://github.com/mathiasbynens/dotfiles/blob/master/.functions


# Extract many types of compressed packages
# Credit: http://nparikh.org/notes/zshrc.txt
extract() {
  if [ -f "$1" ]; then
    case "$1" in
      *.tar.bz2)  tar -jxvf "$1"                        ;;
      *.tar.gz)   tar -zxvf "$1"                        ;;
      *.bz2)      bunzip2 "$1"                          ;;
      *.dmg)      hdiutil mount "$1"                    ;;
      *.gz)       gunzip "$1"                           ;;
      *.tar)      tar -xvf "$1"                         ;;
      *.tbz2)     tar -jxvf "$1"                        ;;
      *.tgz)      tar -zxvf "$1"                        ;;
      *.zip)      unzip "$1"                            ;;
      *.ZIP)      unzip "$1"                            ;;
      *.pax)      cat "$1" | pax -r                     ;;
      *.pax.Z)    uncompress "$1" --stdout | pax -r     ;;
      *.Z)        uncompress "$1"                       ;;
      *) echo "'$1' cannot be extracted/mounted via extract()" ;;
    esac
  else
     echo "'$1' is not a valid file to extract"
  fi
}

# Determine size of a file or total size of a directory
function fs() {
  if du -b /dev/null > /dev/null 2>&1; then
    local arg=-sbh;
  else
    local arg=-sh;
  fi
  if [[ -n "$@" ]]; then
    du $arg -- "$@";
  else
    du $arg .[^.]* ./*;
  fi;
}

# `o` with no arguments opens the current directory, otherwise opens the given
# location
function o() {
  if [ $# -eq 0 ]; then
    open .;
  else
    open "$@";
  fi;
}

function dldoc() {
    local FILENAME=$1 &&
    local TGT_DIR=${2-~/vfdata} &&
    echo "Downloading $1 to $2" &&
    ssh -t 10.1.2.254 "aws s3 cp ${FILENAME} ~/s3data/" &&
    scp 10.1.2.254:~/s3data/`basename $FILENAME` $TGT_DIR
}

function opendoc() {
    local FILENAME=$1 &&
    local TGT_DIR=${2-~/vfdata} &&
    dldoc $FILENAME $TGT_DIR && open ${TGT_DIR}/`basename $FILENAME`
}

function cutvid() {
    local VID_IN=$1 &&
    local VID_OUT=$2 &&
    local TS_START=$3 &&
    local TS_END=$4
    ffmpeg -i $VID_IN -ss $TS_START -t $TS_END -async 1 $VID_OUT
}

# cc - browse chrome history
cc() {
  local cols sep
  cols=$(( COLUMNS / 3 ))
  sep='{::}'
  cp -f ~/Library/Application\ Support/Google/Chrome/Default/History /tmp/h
  sqlite3 -separator $sep /tmp/h \
    "select substr(title, 1, $cols), url
     from urls order by last_visit_time desc" |
  awk -F $sep '{printf "%-'$cols's  \x1b[36m%s\x1b[m\n", $1, $2}' |
  fzf --ansi --multi | sed 's#.*\(https*://\)#\1#' | xargs open
}
